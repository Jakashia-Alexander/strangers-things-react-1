{"version":3,"sources":["api/index.js","components/Auth.js","components/Title.js","components/Posts.js","components/Search.js","components/Post_Form.js","components/MessageForm.js","index.js"],"names":["BASE_URL","getToken","localStorage","getItem","setToken","token","setItem","buildHeaders","base","auth","username","password","a","isNew","url","fetch","method","headers","body","JSON","stringify","user","response","json","error","data","Error","message","hitAPI","endpoint","bodyObj","payload","Auth","props","setIsLoggedIn","useState","setUsername","setPassword","errorMessage","setErrorMessage","className","onSubmit","event","preventDefault","type","value","onChange","target","placeholder","onClick","window","location","reload","Title","id","Posts","allPost","postList","filterTerm","setPostList","isLoggedIn","setEditablePost","filter","post","title","toLowerCase","includes","description","reverse","map","idx","console","log","willDeliver","style","border","isAuthor","author","price","createdAt","postId","_id","posts","messages","fromUser","content","Search","setFilterTerm","htmlFor","PostForm","addNewPost","updatePost","setTitle","setDescription","setPrice","setLocation","setWillDeliver","useEffect","isDirty","setIsDirty","length","postData","result","alignSelf","display","gridTemplateColumns","maxWidth","gap","fontsize","color","rows","columns","checked","MessageForm","messageContent","setMessageContent","messageData","App","setUserMessages","editablePost","then","catch","removeItem","Post_Form","newPost","updatedPost","index","findIndex","postListCopy","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7242e731.chunk.js","sourcesContent":["const BASE_URL =\r\n  \"https://strangers-things.herokuapp.com/api/2007-LSU-RM-WEB-PT\";\r\n\r\nexport const getToken = () => {\r\n  return localStorage.getItem(\"auth-token\");\r\n};\r\n\r\nexport const clearToken = () => {\r\n  localStorage.removeItem(\"auth-token\");\r\n};\r\n\r\nconst setToken = (token) => {\r\n  localStorage.setItem(\"auth-token\", token);\r\n};\r\n\r\nfunction buildHeaders() {\r\n  let base = {\r\n    \"Content-Type\": \"application/json\",\r\n  };\r\n\r\n  if (getToken()) {\r\n    base[\"Authorization\"] = `Bearer ${getToken()}`;\r\n  }\r\n\r\n  return base;\r\n}\r\n\r\nexport const auth = async (username, password, isNew = false) => {\r\n  const url = `${BASE_URL}/users` + (isNew ? \"/register\" : \"/login\");\r\n\r\n  const response = await fetch(url, {\r\n    method: \"POST\",\r\n    headers: buildHeaders(),\r\n    body: JSON.stringify({\r\n      user: {\r\n        username: username,\r\n        password: password,\r\n      },\r\n    }),\r\n  });\r\n\r\n  const { error, data } = await response.json();\r\n\r\n  if (error) {\r\n    throw Error(error.message);\r\n  }\r\n\r\n  if (data && data.token) {\r\n    setToken(data.token);\r\n  }\r\n\r\n  return data;\r\n};\r\n\r\nexport const hitAPI = async (method, endpoint, bodyObj) => {\r\n  const payload = {\r\n    method: method,\r\n    headers: buildHeaders(),\r\n  };\r\n\r\n  if (bodyObj) {\r\n    payload.body = JSON.stringify(bodyObj);\r\n  }\r\n\r\n  const response = await fetch(`${BASE_URL}${endpoint}`, payload);\r\n\r\n  const { error, data } = await response.json();\r\n\r\n  if (error) {\r\n    throw Error(error.message);\r\n  }\r\n\r\n  if (data && data.token) {\r\n    setToken(data.token);\r\n  }\r\n\r\n  return data;\r\n};","import React, { useState } from \"react\";\r\n\r\nimport { auth } from \"../api\";\r\n\r\nconst Auth = (props) => {\r\n  const { setIsLoggedIn } = props;\r\n\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [errorMessage, setErrorMessage] = useState(null);\r\n\r\n  return (\r\n    <form className=\"auth\" onSubmit={(event) => event.preventDefault()}>\r\n      <h3>Register or Log In</h3>\r\n      {errorMessage ? <h5 className=\"error\">{errorMessage}</h5> : null}\r\n      <input\r\n        type=\"text\"\r\n        value={username}\r\n        onChange={(event) => setUsername(event.target.value)}\r\n        placeholder=\"username\"\r\n        className=\"login\"\r\n      />\r\n      <input\r\n        type=\"password\"\r\n        value={password}\r\n        onChange={(event) => setPassword(event.target.value)}\r\n        placeholder=\"password\"\r\n        className=\"login\"\r\n      />\r\n      <button\r\n        onClick={async (event) => {\r\n          try {\r\n            const result = await auth(username, password, true);\r\n            setIsLoggedIn(true);\r\n            window.location.reload(false);\r\n          } catch (error) {\r\n            setErrorMessage(error.message);\r\n          }\r\n        }}\r\n      >\r\n        Register\r\n      </button>\r\n      <button\r\n        onClick={async (event) => {\r\n          try {\r\n            const result = await auth(username, password);\r\n            setIsLoggedIn(true);\r\n            window.location.reload(false);\r\n          } catch (error) {\r\n            setErrorMessage(error.message);\r\n          }\r\n        }}\r\n      >\r\n        Log In\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Auth;\r\n","import React from 'react';\r\n\r\nconst Title = () => {\r\n  return <header id=\"title\" className=\"header\">\r\n    <h1 className=\"pageName\">\r\n      Stranger's Things\r\n    </h1>\r\n  </header>\r\n}\r\n\r\nexport default Title;","import { React, useState, useEffect } from \"react\";\r\n\r\nimport { hitAPI } from \"../api\";\r\nimport { MessageForm } from \"./index\";\r\nimport { getToken } from \"../api\";\r\n\r\nconst Posts = (props) => {\r\n  const allPost = props.postList;\r\n  const filterTerm = props.filterTerm;\r\n  const setPostList = props.setPostList;\r\n  const [isLoggedIn, setIsLoggedIn] = useState(!!getToken());\r\n  const { postList, setEditablePost } = props;\r\n\r\n  return (\r\n    <div className=\"posts\">\r\n      {allPost\r\n        .filter((post) => {\r\n          return (\r\n            post.title.toLowerCase().includes(filterTerm.toLowerCase()) ||\r\n            post.description.toLowerCase().includes(filterTerm.toLowerCase())\r\n          );\r\n        })\r\n        .reverse()\r\n        .map((post, idx) => {\r\n          console.log(\"Post:\", idx, post.willDeliver);\r\n          return (\r\n            <div\r\n              className=\"post\"\r\n              key={idx}\r\n              style={{\r\n                border: post.isAuthor ? \"5px solid gold\" : \"1px solid brown\",\r\n              }}\r\n            >\r\n              <h5 className=\"post-title\">{post.title}</h5>\r\n              <h4 className=\"post-location\">{post.location}</h4>\r\n              <p>\r\n                <strong>Posted by:</strong> {post.author.username}\r\n              </p>\r\n              <p>\r\n                <strong>Description:</strong>\r\n                {post.description}\r\n              </p>\r\n              <p>\r\n                <strong>Price:</strong> {post.price}\r\n              </p>\r\n              <p>\r\n                <strong>Posted on:</strong>\r\n                {post.createdAt}\r\n              </p>\r\n              <p>{post.willDeliver}</p>\r\n              {post.isAuthor ? (\r\n                <button\r\n                  className=\"edit\"\r\n                  onClick={() => {\r\n                    setEditablePost(post);\r\n                  }}\r\n                >\r\n                  EDIT\r\n                </button>\r\n              ) : null}\r\n\r\n              {!post.isAuthor && isLoggedIn ? (\r\n                <MessageForm postId={post._id} />\r\n              ) : null}\r\n\r\n              {post.isAuthor && isLoggedIn ? (\r\n                <>\r\n                  <button\r\n                    className=\"deletePost\"\r\n                    onClick={async () => {\r\n                      await hitAPI(\"DELETE\", \"/posts/\" + post._id);\r\n                      const data = await hitAPI(\"GET\", \"/posts\");\r\n                      const { posts } = data;\r\n                      setPostList(posts);\r\n                    }}\r\n                  >\r\n                    DELETE\r\n                  </button>{\" \"}\r\n                </>\r\n              ) : null}\r\n\r\n              {post.isAuthor && isLoggedIn ? (\r\n                <div className=\"messageInbox\">\r\n                  <h3>Messages Received About This Item:</h3>\r\n                  {post.messages.map((message) => {\r\n                    return (\r\n                      <>\r\n                        <p>\r\n                          {message.fromUser.username}: {message.content}\r\n                        </p>\r\n                      </>\r\n                    );\r\n                  })}\r\n                </div>\r\n              ) : null}\r\n            </div>\r\n          );\r\n        })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Posts;\r\n","import {React, useState} from 'react';\r\n\r\n\r\n\r\nconst Search = (props) => {\r\n    const {filterTerm, setFilterTerm} = props;\r\n\r\n    return <form id=\"search\" className=\"search\" onSubmit={(event) => {\r\n        event.preventDefault();\r\n    }}>\r\n        <label htmlFor='keywords'> <strong>SEARCH</strong></label>\r\n        <input \r\n        id='keywords' \r\n        type='text' \r\n        placeholder='Enter Keywords for Search'\r\n        className=\"search\"\r\n        value={ filterTerm }\r\n        onChange={(event) => {\r\n            setFilterTerm(event.target.value)\r\n        }} />\r\n        <button onClick={() => setFilterTerm('') }>RESET FILTER</button>\r\n    </form>\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default Search;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport { hitAPI } from \"../api\";\r\n\r\nconst PostForm = (props) => {\r\n  const { addNewPost, _id, setEditablePost, updatePost } = props;\r\n\r\n  const [title, setTitle] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [price, setPrice] = useState(\"\");\r\n  const [location, setLocation] = useState(\"\");\r\n  const [willDeliver, setWillDeliver] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setTitle(props.title || \"\");\r\n    setDescription(props.description || \"\");\r\n    setPrice(props.price || \"\");\r\n    setLocation(props.location || \"\");\r\n    setWillDeliver(props.willDeliver || false);\r\n  }, [_id]);\r\n\r\n  function clearForm() {\r\n    setTitle(\"\");\r\n    setDescription(\"\");\r\n    setPrice(\"\");\r\n    setLocation(\"\");\r\n    setWillDeliver(false);\r\n  }\r\n\r\n  const [isDirty, setIsDirty] = useState(false);\r\n\r\n  return (\r\n    <form\r\n      className=\"post-form\"\r\n      onSubmit={async (event) => {\r\n        event.preventDefault();\r\n\r\n        if (\r\n          title.length === 0 ||\r\n          description.length === 0 ||\r\n          price.length === 0\r\n        ) {\r\n          setIsDirty(true);\r\n          return;\r\n        }\r\n\r\n        const postData = {\r\n          post: {\r\n            title,\r\n            description,\r\n            price,\r\n            willDeliver,\r\n          },\r\n        };\r\n\r\n        if (location.length > 0) {\r\n          postData.post.location = location;\r\n        }\r\n\r\n        try {\r\n          if (_id) {\r\n            const result = await hitAPI(\"PATCH\", `/posts/${_id}`, postData);\r\n            const { post } = result;\r\n            post.messages = props.messages;\r\n            updatePost(post);\r\n            setEditablePost({});\r\n          } else {\r\n            const result = await hitAPI(\"POST\", \"/posts\", postData);\r\n            addNewPost(result.post);\r\n            clearForm();\r\n          }\r\n        } catch (error) {\r\n          console.error(error);\r\n        }\r\n      }}\r\n      style={{\r\n        alignSelf: \"flex-start\",\r\n        display: \"grid\",\r\n        gridTemplateColumns: \"1fr\",\r\n        maxWidth: \"480px\",\r\n        gap: \"8px\",\r\n        fontsize: \"30px\",\r\n      }}\r\n    >\r\n      {_id ? <h3>Update Your Post</h3> : <h3>Whatcha got?</h3>}\r\n\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"title for your post\"\r\n        value={title}\r\n        onChange={(event) => setTitle(event.target.value)}\r\n      />\r\n      {isDirty && title.length === 0 ? (\r\n        <h3 style={{ color: \"red\" }}>You need a title</h3>\r\n      ) : null}\r\n      <textarea\r\n        type=\"text\"\r\n        placeholder=\"description of the item\"\r\n        rows=\"10\"\r\n        columns=\"80\"\r\n        value={description}\r\n        onChange={(event) => setDescription(event.target.value)}\r\n      />\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"requested price\"\r\n        value={price}\r\n        onChange={(event) => setPrice(event.target.value)}\r\n      />\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"location, leave blank for [On Request]\"\r\n        value={location}\r\n        onChange={(event) => setLocation(event.target.value)}\r\n      />\r\n      <label>\r\n        <input\r\n          className=\"checkbox\"\r\n          type=\"checkbox\"\r\n          checked={willDeliver}\r\n          onChange={() => setWillDeliver(!willDeliver)}\r\n        />\r\n        I will deliver this\r\n      </label>\r\n      <button>POST IT</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default PostForm;\r\n","import React, { useState } from \"react\";\r\n\r\nimport { hitAPI } from \"../api\";\r\n\r\nconst MessageForm = (props) => {\r\n  const [messageContent, setMessageContent] = useState(\"\");\r\n  const postId = props.postId;\r\n\r\n  return (\r\n    <form\r\n      className=\"messages\"\r\n      style={{\r\n        alignSelf: \"flex-start\",\r\n        display: \"grid\",\r\n        gridTemplateColumns: \"1fr\",\r\n        maxWidth: \"480px\",\r\n        gap: \"8px\",\r\n      }}\r\n    >\r\n      <h3>Interested? Send a message to the seller.</h3>\r\n      <textarea\r\n        type=\"text\"\r\n        placeholder=\"message content\"\r\n        rows=\"10\"\r\n        columns=\"80\"\r\n        value={messageContent}\r\n        onChange={(event) => setMessageContent(event.target.value)}\r\n      />\r\n      <button\r\n        onClick={async (event) => {\r\n          event.preventDefault();\r\n\r\n          const messageData = {\r\n            message: {\r\n              content: messageContent,\r\n            },\r\n          };\r\n\r\n          try {\r\n            await hitAPI(\"POST\", \"/posts/\" + postId + \"/messages\", messageData);\r\n            setMessageContent(\"\");\r\n          } catch (error) {\r\n            console.error(error);\r\n          }\r\n        }}\r\n      >\r\n        {\" \"}\r\n        SEND MESSAGE\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default MessageForm;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport { getToken, clearToken, hitAPI } from \"./api\";\r\nimport { Auth, Title, Posts, Search, Post_Form } from \"./components\";\r\n\r\nconst App = () => {\r\n  // a piece of state that represents the status of the current user\r\n  const [isLoggedIn, setIsLoggedIn] = useState(!!getToken());\r\n  const [postList, setPostList] = useState([]);\r\n  const [filterTerm, setFilterTerm] = useState(\"\");\r\n  const [messageList, setMessageList] = useState([]);\r\n  const [viewMessages, setViewMessages] = useState(false);\r\n  const [userMessages, setUserMessages] = useState([]);\r\n  const [editablePost, setEditablePost] = useState({});\r\n\r\n  function addNewPost(newPost) {\r\n    setPostList([...postList, newPost]);\r\n  }\r\n\r\n  function updatePost(updatedPost) {\r\n    let index = postList.findIndex((post) => {\r\n      return post._id === updatedPost._id;\r\n    });\r\n\r\n    if (index > -1) {\r\n      let postListCopy = [...postList];\r\n      postListCopy[index] = updatedPost;\r\n      setPostList(postListCopy);\r\n    }\r\n  }\r\n\r\n\r\n  function removePost(post) {\r\n    setPostList(\r\n      postList.filter(x => x !== post)\r\n    )\r\n  }\r\n\r\n  function addNewMessage(newMessage) {\r\n    setMessageList([...messageList, newMessage]);\r\n  }\r\n\r\n  useEffect(() => {\r\n    hitAPI(\"GET\", \"/posts\")\r\n      .then((data) => {\r\n        const { posts } = data;\r\n        setPostList(posts);\r\n      })\r\n      .catch(console.error);\r\n  }, [isLoggedIn]);\r\n\r\n  useEffect(() => {\r\n    if (!isLoggedIn) {\r\n      setUserMessages([]);\r\n      return;\r\n    }\r\n\r\n    hitAPI(\"get\", \"/users/me\")\r\n      .then((data) => {\r\n        const { messages } = data;\r\n        setUserMessages(messages);\r\n      })\r\n      .catch(console.error);\r\n  }, [isLoggedIn]);\r\n\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <Title />\r\n      <Search filterTerm={filterTerm} setFilterTerm={setFilterTerm} />\r\n      <Posts postList={ postList } setPostList={ setPostList } filterTerm={ filterTerm } setEditablePost={ setEditablePost } />\r\n      {isLoggedIn ? (\r\n        <>\r\n          <div className=\"logout\">\r\n            <h1 className=\"loginMessage\">Thanks for logging in!</h1>\r\n            <span>\r\n              <button\r\n                className=\"logoutButton\"\r\n                onClick={() => {\r\n                  clearToken();\r\n                  setIsLoggedIn(false);\r\n                  window.location.reload(false);\r\n                }}\r\n              >\r\n                LOG OUT\r\n              </button>\r\n            </span>\r\n          </div>\r\n        </>\r\n      ) : (\r\n        <Auth setIsLoggedIn={setIsLoggedIn} />\r\n      )}\r\n      {isLoggedIn ? <> \r\n        <Post_Form addNewPost={addNewPost} updatePost={updatePost} {...editablePost} setEditablePost={setEditablePost} /> \r\n         </> \r\n        : null}\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nReactDOM.render(<App />, document.getElementById(\"app\"));\r\n\r\n\r\n"],"sourceRoot":""}